<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="1.82"/>
    <errors>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686">
            <location file="../Components/Basics/LogManagerSrv/LogManager.cpp" line="119"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686">
            <location file="../Components/Basics/LogManagerSrv/LogManager.cpp" line="120"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;unsigned int&apos;." cwe="686">
            <location file="../Components/Basics/LogManagerSrv/LogManager.cpp" line="121"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="../Components/Basics/LogManagerSrv/LogManager.cpp" line="202"/>
        </error>
        <error id="stlIfStrFind" severity="performance" msg="Inefficient usage of string::find() in condition; string::compare() would be faster." verbose="Either inefficient or wrong usage of string::find(). string::compare() will be faster if string::find&apos;s result is compared with 0, because it will not scan the whole string. If your intention is to check that there are no findings in the string, you should compare with std::string::npos." cwe="597">
            <location file="../Components/Basics/LogManagerSrv/LogManager.cpp" line="333"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;pReqParcel&apos; should be passed by reference." verbose="Parameter &apos;pReqParcel&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file="../Components/Basics/MediatorSrv/SprMediatorHub.cpp" line="37"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Components/Basics/PowerManagerSrv/PowerManager.cpp" line="112"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;pReqParcel&apos; should be passed by reference." verbose="Parameter &apos;pReqParcel&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file="../Components/Basics/PowerManagerSrv/PowerManagerHub.cpp" line="37"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Components/Basics/PowerManagerSrv/PowerManager.h" line="41"/>
        </error>
        <error id="copyCtorAndEqOperator" severity="warning" msg="The class &apos;SprTimer&apos; has &apos;copy constructor&apos; but lack of &apos;operator=&apos;." verbose="The class &apos;SprTimer&apos; has &apos;copy constructor&apos; but lack of &apos;operator=&apos;.">
            <location file0="../Components/Basics/SparrowSrv/SprTimer.cpp" file="../Components/Basics/SparrowSrv/SprTimer.h" line="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="../Core/SprBinderHub.cpp" line="71"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;SprBinderHub&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;SprBinderHub&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="../Core/SprBinderHub.cpp" file="../Core/SprBinderHub.h" line="31"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="1"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="5"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="14"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="20"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="32"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="42"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="47"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="52"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="62"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="71"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="76"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;ENUM_OR_STRING&apos; since the value of &apos;ENUM_OR_STRING&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="../Core/SprSigList.gen" line="98"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="../Core/SprMsg.cpp" line="198"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;cb&apos; should be passed by reference." verbose="Parameter &apos;cb&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file="../Core/SprObserverWithSocket.cpp" line="32"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;cb&apos; should be passed by reference." verbose="Parameter &apos;cb&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file="../Core/SprObserverWithSocket.cpp" line="37"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;cb&apos; should be passed by reference." verbose="Parameter &apos;cb&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">
            <location file="../Core/SprObserverWithSocket.cpp" line="43"/>
        </error>
        <error id="invalidScanfArgType_int" severity="warning" msg="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;unsigned int *&apos;." verbose="%d in format string (no. 1) requires &apos;int *&apos; but the argument type is &apos;unsigned int *&apos;." cwe="686">
            <location file="../Debug/InfraWatch/CustomDebugWatch.cpp" line="77"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="../Util/cJSON.c" line="0"/>
        </error>
        <error id="uselessAssignmentPtrArg" severity="warning" msg="Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?" verbose="Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?" cwe="398">
            <location file="../Util/cJSON.c" line="3142"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="783" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1678" info="Calling function &apos;parse_string&apos;, 2nd argument &apos;input_buffer&apos; value is 0"/>
            <location file="../Util/cJSON.c" line="1688" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="784" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1678" info="Calling function &apos;parse_string&apos;, 2nd argument &apos;input_buffer&apos; value is 0"/>
            <location file="../Util/cJSON.c" line="1688" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="789" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1678" info="Calling function &apos;parse_string&apos;, 2nd argument &apos;input_buffer&apos; value is 0"/>
            <location file="../Util/cJSON.c" line="1688" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="798" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1678" info="Calling function &apos;parse_string&apos;, 2nd argument &apos;input_buffer&apos; value is 0"/>
            <location file="../Util/cJSON.c" line="1688" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="813" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1678" info="Calling function &apos;parse_string&apos;, 2nd argument &apos;input_buffer&apos; value is 0"/>
            <location file="../Util/cJSON.c" line="1688" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="819" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1678" info="Calling function &apos;parse_string&apos;, 2nd argument &apos;input_buffer&apos; value is 0"/>
            <location file="../Util/cJSON.c" line="1688" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="820" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1678" info="Calling function &apos;parse_string&apos;, 2nd argument &apos;input_buffer&apos; value is 0"/>
            <location file="../Util/cJSON.c" line="1688" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="890" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1678" info="Calling function &apos;parse_string&apos;, 2nd argument &apos;input_buffer&apos; value is 0"/>
            <location file="../Util/cJSON.c" line="1688" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="891" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1678" info="Calling function &apos;parse_string&apos;, 2nd argument &apos;input_buffer&apos; value is 0"/>
            <location file="../Util/cJSON.c" line="1688" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;buffer!=NULL&apos; is redundant or there is possible null pointer dereference: buffer." verbose="Either the condition &apos;buffer!=NULL&apos; is redundant or there is possible null pointer dereference: buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1064" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1059" info="Assuming that condition &apos;buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1459" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1473" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1463" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1473" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1465" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1473" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1471" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1473" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1482" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1480" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1619" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1625" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1623" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1625" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1630" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1632" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1640" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1638" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." verbose="Either the condition &apos;input_buffer!=NULL&apos; is redundant or there is possible null pointer dereference: input_buffer." cwe="476">
            <location file="../Util/cJSON.c" line="1676" info="Null pointer dereference"/>
            <location file="../Util/cJSON.c" line="1688" info="Assuming that condition &apos;input_buffer!=NULL&apos; is not redundant"/>
        </error>
        <error id="wrongmathcall" severity="warning" msg="Passing value -1.0 to sqrt() leads to implementation-defined result." verbose="Passing value -1.0 to sqrt() leads to implementation-defined result." cwe="758">
            <location file="../Util/cJSON.c" line="113"/>
        </error>
        <error id="missingInclude" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config."/>
    </errors>
</results>
